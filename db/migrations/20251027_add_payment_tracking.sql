-- Add payment tracking columns to works table
ALTER TABLE "works"
ADD COLUMN "bill_no" text,
ADD COLUMN "bill_amount_with_tax" numeric(12, 2);

COMMENT ON COLUMN "works"."bill_no" IS 'Bill number associated with the work';
COMMENT ON COLUMN "works"."bill_amount_with_tax" IS 'Total bill amount including tax in INR';

-- Create payment_logs table to track payment history
CREATE TABLE "payment_logs" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "created_at" timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    "work_id" bigint NOT NULL REFERENCES "works"("id") ON DELETE CASCADE,
    "user_id" uuid NOT NULL REFERENCES "auth"."users"("id") ON DELETE CASCADE,
    "user_email" text NOT NULL,
    "previous_bill_no" text,
    "previous_bill_amount" numeric(12, 2),
    "new_bill_no" text,
    "new_bill_amount" numeric(12, 2),
    "remark" text
);

-- Add RLS policies for payment_logs
ALTER TABLE "payment_logs" ENABLE ROW LEVEL SECURITY;

-- Allow any authenticated user to view payment logs (same as progress_logs)
CREATE POLICY "Anyone can view payment logs"
    ON "payment_logs"
    FOR SELECT
    TO authenticated
    USING (true);

-- Only authenticated users can insert their own payment logs
CREATE POLICY "Users can insert their own payment logs"
    ON "payment_logs"
    FOR INSERT
    TO authenticated
    WITH CHECK (auth.uid() = user_id);

-- Create index for faster queries
CREATE INDEX "payment_logs_work_id_idx" ON "payment_logs"("work_id");
CREATE INDEX "payment_logs_user_id_idx" ON "payment_logs"("user_id");